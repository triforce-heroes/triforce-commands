import{CommandsMatcher as u}from"../CommandsMatcher.js";import{Driver as e}from"../Driver.js";let s=/[\uE000-\uE0FF]/,d=/[\u000E\uE000-\uE0FF]/u,E=new u(u=>u.includes("\x0e")||s.test(u),(u,e)=>{let s=d.exec(u.slice(e));return null===s?-1:s.index+e});E.addExpression(s),E.addExpression(/\u000E\0\0.../),E.addExpression(/\u000E\0[\u0002\u0003]../),E.addExpression(/\u000E\u0001\0./),E.addExpression(/\u000E\u0001[\u0001\u0004\u0005]../),E.addExpression(/\u000E\u0001\u0002.../),E.addExpression(/\u000E\u0001\u0003..../),E.addExpression(/\u000E\u0002[\0\u0001\u0005\u0006\u0007]./),E.addExpression(/\u000E\u0002[\u0002\u0003\u0004\u0008]../),E.addFailureLiteral("\x0e");export const ZTFH=new e("ZTFH",u=>E.match(u));