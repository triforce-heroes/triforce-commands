import{BufferConsumer as e}from"@triforce-heroes/triforce-core/BufferConsumer";import{CommandsMatcher as t}from"../CommandsMatcher.js";import{Driver as r}from"../Driver.js";import{EntryCommandDefined as n}from"../entries/EntryCommandDefined.js";let u=/[\u000E\u000F\uE000-\uEFFF]/u,o=new t(e=>u.test(e),(e,t)=>{let r=u.exec(e.slice(t));return null===r?-1:r.index+t});o.addExpression(/[\uE000-\uEFFF]/),o.addExpression(/\u000E..(.)/u,e=>e[1].codePointAt(0)/2),o.addExpression(/\u000F\u0001\u0010/u),o.addExpression(/\u000F\u0002\u0002/u),o.addExpression(/\u000F\u0002\0/u),o.addFailureLiteral("\x0e"),o.addFailureLiteral("\x0f");export const ZTFH=new r("ZTFH",e=>o.match(e),t=>{if(1===t.length)return new n(t,{type:16776960,subtype:0,attributes:[t.codePointAt(0)]});if(t.startsWith("\x0f"))return new n(t,{type:16776975,subtype:0,attributes:[t.codePointAt(1),t.codePointAt(2)]});let r=new e(Buffer.from(t),1),u=r.readUnsignedInt8(),o=r.readUnsignedInt8(),i=[],s=Buffer.from(t.slice(4),"utf16le");for(let e=0;e<s.length;e+=2)i.push(s.readUInt16LE(e));return new n(t,{type:u,subtype:o,attributes:i})});